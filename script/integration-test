#!/bin/bash
set -e

# Run regular unit tests first
./script/test

elasticsearch_versions=(v5 v6 v7)

for v in "${elasticsearch_versions[@]}"
do
  # Make sure everything is clear from previous runs
  docker-compose -f integration_data/$v/elasticsearch-cluster-compose.yml down
  docker volume rm ${v}_vulcanizer-backup-volume || echo "OK for volume not to exist"
done

for v in "${elasticsearch_versions[@]}"
do
  cd integration_data/$v
  echo "Running integration tests for Elasticsearch $v"
  docker-compose -f elasticsearch-cluster-compose.yml up --build -d
  echo "Wait for Elasticsearch $v to start..."
  until foo=$(curl -s localhost:49200)
  do
    sleep 10
  done

  echo "Creating integration_test index"
  curl -s -H "Content-Type: application/json" -XPUT localhost:49200/integration_test -d'{
    "settings": {
      "number_of_shards": 2
    }
  }'
  echo "Filling in data to integration_test index"
  curl -s -H "Content-Type: application/x-ndjson" -XPOST localhost:49200/_bulk --data-binary "@../documents.dat"; echo
  echo "Creating snapshot repository backup-repo"
  curl -H "Content-Type: application/json" -XPUT localhost:49200/_snapshot/backup-repo -d '{ "type": "fs", "settings": { "location": "/backups" } }'
  echo "Making snapshot snapshot_1 in repository backup-repo"
  curl -s -XPUT localhost:49200/_snapshot/backup-repo/snapshot_1?wait_for_completion=true
  echo "Adding alias integration_test_alias"
  curl -s -H "Content-Type: application/json" XPOST localhost:49200/_aliases -d '{ "actions" : [ { "add" : { "index" : "integration_test", "alias" : "integration_test_alias" } } ] }'

  # Run tests
  go test -v github.com/leosunmo/vulcanizer/... -tags integration -count=1

  docker-compose -f elasticsearch-cluster-compose.yml down
  cd ../../
done
